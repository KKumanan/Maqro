(()=>{"use strict";const e="maqroUserEvents",t="maqroBatchSendAlarm",n="maqroKeepaliveAlarm",s={isCollecting:!0,userManuallyPaused:!1,isSendingBatch:!1,lastSendAttempt:0,sendFailureCount:0,totalEventsSent:0,totalEventsDropped:0};function o(e,t,...n){"error"===e&&console[e]("Maqro:",t,...n)}function i(e){return(new TextEncoder).encode(JSON.stringify(e)).length}async function a(){if(s.isSendingBatch)o("info","Batch send already in progress. Skipping.");else{s.isSendingBatch=!0,s.lastSendAttempt=Date.now();try{const t=(await chrome.storage.local.get(e))[e]||[];if(0===t.length)return void o("info","No events to send.");const n=function(e){const t=[];let n=[],s=0;for(const o of e){const e=i([o]);(n.length>=50||s+e>102400)&&n.length>0&&(t.push(n),n=[],s=0),n.push(o),s+=e}return n.length>0&&t.push(n),t}(t);o("info",`Sending ${t.length} events in ${n.length} chunks`);let a=0,l=0;for(let e=0;e<n.length;e++){const t=n[e];await r(t,e+1,n.length)?(a++,s.totalEventsSent+=t.length):(l++,s.totalEventsDropped+=t.length)}0===l?(await chrome.storage.local.remove(e),o("info",`All ${a} chunks sent successfully. Storage cleared.`),s.sendFailureCount=0):(o("error",`${l}/${n.length} chunks failed. Keeping events in storage.`),s.sendFailureCount++)}catch(e){o("error","Error in batch send process:",e),s.sendFailureCount++}finally{s.isSendingBatch=!1}}}async function r(e,t,n){let s=0;for(;s<3;)try{const s=JSON.stringify({events:e});o("info",`Sending chunk ${t}/${n} (${e.length} events, ${s.length} bytes)`);const i=await fetch("http://localhost:3000/api/events",{method:"POST",headers:{"Content-Type":"application/json"},body:s,signal:AbortSignal.timeout(1e4)});if(!i.ok){const e=await i.text();throw new Error(`HTTP ${i.status}: ${e}`)}return o("info",`Chunk ${t}/${n} sent successfully`),!0}catch(e){if(s++,"AbortError"===e.name)o("error",`Chunk ${t} timeout (attempt ${s})`);else{if(e.message.includes("413"))return o("error",`Chunk ${t} too large (413 error). This chunk will be dropped.`),!1;o("error",`Chunk ${t} failed (attempt ${s}):`,e.message)}s<3&&await new Promise((e=>setTimeout(e,1e3*s)))}return o("error",`Chunk ${t} failed after 3 attempts`),!1}async function l(e){try{const t=await chrome.tabs.query({url:["http://*/*","https://*/*"],status:"complete"});o("info",`Broadcasting collection state (${e}) to ${t.length} tabs`);const n=t.filter((e=>e.id)).map((t=>chrome.tabs.sendMessage(t.id,{type:"TOGGLE_COLLECTION",enabled:e}).catch((()=>{}))));await Promise.allSettled(n)}catch(e){o("error","Error broadcasting to tabs:",e)}}async function c(){o("info","Initializing Maqro extension...");const e=[{name:t,periodInMinutes:2},{name:n,periodInMinutes:1}];for(const t of e)await chrome.alarms.get(t.name)||(await chrome.alarms.create(t.name,{periodInMinutes:t.periodInMinutes}),o("info",`Created ${t.name} alarm`));s.isCollecting=!0,s.userManuallyPaused=!1,await l(s.isCollecting),o("info","Extension initialization complete")}chrome.runtime.onMessage.addListener(((t,n,i)=>{switch(t.type){case"USER_EVENT":t.event&&(async function(t){if(s.isCollecting)try{let n=(await chrome.storage.local.get(e))[e]||[];if(n.length>=1e3){const e=n.length-1e3+1;n=n.slice(e),s.totalEventsDropped+=e,o("warn",`Dropped ${e} old events to prevent memory bloat`)}n.push(t),await chrome.storage.local.set({[e]:n}),function(t){if(t.length>=50)return o("info","Event count threshold reached. Triggering send."),void a();chrome.storage.local.getBytesInUse([e],(e=>{if(chrome.runtime.lastError)return void o("error","Error checking storage usage:",chrome.runtime.lastError.message);const t=e/(chrome.storage.local.QUOTA_BYTES||5242880);t>.7&&(o("info",`Storage threshold reached (${Math.round(100*t)}%). Triggering send.`),a())}))}(n)}catch(e){o("error","Error storing event:",e)}}(t.event),i({success:!0}));break;case"TOGGLE_COLLECTION":return"boolean"==typeof t.enabled&&(s.userManuallyPaused=!t.enabled,s.isCollecting=t.enabled,o("info",`Collection ${s.isCollecting?"enabled":"disabled"} by user`),l(s.isCollecting),i({success:!0,isCollecting:s.isCollecting}),s.isCollecting||a()),!0;case"GET_OPERATIONAL_STATE":return i({success:!0,isCollecting:s.isCollecting,stats:{totalEventsSent:s.totalEventsSent,totalEventsDropped:s.totalEventsDropped,sendFailureCount:s.sendFailureCount}}),!0;case"HEALTH_CHECK":return i({success:!0,isAlive:!0}),!0}})),chrome.runtime.onInstalled.addListener(c),chrome.runtime.onStartup.addListener(c),chrome.alarms.onAlarm.addListener((e=>{if(e.name===t)o("info","Batch send alarm triggered"),a()})),chrome.tabs.onUpdated.addListener(((e,t,n)=>{var i;"complete"!==t.status||!(null===(i=n.url)||void 0===i?void 0:i.startsWith("http"))||n.url.includes("chrome://")||n.url.includes("chrome-extension://")||setTimeout((()=>{chrome.scripting.executeScript({target:{tabId:e},files:["content.js"]}).then((()=>{o("info",`Content script injected into tab ${e}`),setTimeout((()=>{chrome.tabs.sendMessage(e,{type:"TOGGLE_COLLECTION",enabled:s.isCollecting}).catch((t=>{t.message.includes("Could not establish connection")||t.message.includes("receiving end does not exist")||o("warn",`Failed to send initial state to tab ${e}: ${t.message}`)}))}),500)})).catch((t=>{t.message.includes("Cannot access")||t.message.includes("The extensions gallery cannot be scripted")||o("warn",`Content script injection failed for tab ${e}: ${t.message}`)}))}),200)})),chrome.action.onClicked.addListener((()=>{const e=!s.isCollecting;s.userManuallyPaused=!e,s.isCollecting=e,o("info","Extension toggled: "+(e?"ON":"OFF")),l(s.isCollecting),s.isCollecting||a()})),chrome.idle.onStateChanged.addListener((e=>{if(!s.userManuallyPaused){const t="active"===e;s.isCollecting!==t&&(s.isCollecting=t,l(s.isCollecting))}})),chrome.windows.onFocusChanged.addListener((e=>{if(!s.userManuallyPaused){const t=e!==chrome.windows.WINDOW_ID_NONE;s.isCollecting!==t&&(s.isCollecting=t,l(s.isCollecting))}}))})();
//# sourceMappingURL=background.js.map